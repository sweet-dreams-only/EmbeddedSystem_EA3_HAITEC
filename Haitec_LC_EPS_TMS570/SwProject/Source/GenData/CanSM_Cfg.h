/* -----------------------------------------------------------------------------
  Filename:    CanSM_Cfg.h
  Description: Toolversion: 11.08.02.01.30.01.24.00.00.00
               
               Serial Number: CBD1300124
               Customer Info: Nxtr Automotive Corporation
                              Package: MSR_Vector_SLP3
                              Micro: TMS570LS30376USC
                              Compiler: TexasInstruments ccs 4.9.2
               
               
               Generator Fwk   : GENy 
               Generator Module: CanSM
               
               Configuration   : C:\SynergyProjects\Haitec_LC_EPS_TMS570-nzx5jd\Haitec_LC_EPS_TMS570\Tools\AsrProject\Config\ECUC\EPS.ecuc.vdsxml
               
               ECU: 
                       TargetSystem: Hw_Tms470/570Cpu (Dcan)
                       Compiler:     TexasInstruments
                       Derivates:    TMS570LS30316U
               
               Channel "CAN00":
                       Databasefile: 
                       Bussystem:    CAN
                       Manufacturer: Vector
                       Node:         CanStateManagerConfiguration

  Generated by , 2013-08-09  10:10:56
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2011 by Vctr Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vctr Informatik 
  GmbH.
  
  Vctr Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vctr Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(CANSM_CFG_H)
#define CANSM_CFG_H

/* -----------------------------------------------------------------------------
    &&&~ 
 ----------------------------------------------------------------------------- */

#include "ComStack_Types.h"
#include "Com.h"
#include "Dem.h"


/* -----------------------------------------------------------------------------
    &&&~ 
 ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
    &&&~ Version Defines
 ----------------------------------------------------------------------------- */

#if (COM_AR_MAJOR_VERSION != 0x03u)
# error "COM_AR_MAJOR_VERSION not correct. Check AUTOSAR Release version!"
#endif

#if (COM_AR_MINOR_VERSION != 0x00u)
# error "COM_AR_MINOR_VERSION not correct. Check AUTOSAR Release version!"
#endif



/* -----------------------------------------------------------------------------
    &&&~ Transceiver Define
 ----------------------------------------------------------------------------- */

#define CANSM_TRCVACTIVE                     TRUE


/* START of Checksum include for
  - Ccl_AsrSmCanPrecompileCRC */
#define CANSM_CONFIG_VARIANT                 (0x01u)
#define CANSM_PARTIAL_NETWORK                STD_OFF
#define CANSM_BSWM_COMMODE_INDICATION        STD_OFF
#define CANSM_TRANSCEIVER_HANDLING           STD_OFF
#define CANSM_DEV_ERROR_DETECT               STD_ON
#define CANSM_PROD_ERROR_DETECT              STD_ON
#define CANSM_VERSION_INFO_API               STD_ON
#define CANSM_CRC_CHECK                      STD_OFF
#define CANSM_PRECOMPILE_CRC                 (uint32) 0x22E67FC9u
#define CANSM_ECU_PASSIVE_MODE               STD_OFF
#define CANSM_BUSOFF_NOTIFICATION            STD_ON
#define CANSM_DISABLE_DM_IN_SILENT_COM       STD_ON
#define CANSM_IDENTITY_MANAGER_CONFIG        STD_OFF
/* END of Checksum include for
  - Ccl_AsrSmCanPrecompileCRC */

/* -----------------------------------------------------------------------------
    &&&~ Link-Time Switches
 ----------------------------------------------------------------------------- */

#define CANSM_BOR_DISABLE_RX_DL_MONITORING   STD_OFF
/* CanSM instance properties */
/* -----------------------------------------------------------------------------
    &&&~ CanNm EcuC Global Configuration Container Name
 ----------------------------------------------------------------------------- */

#define CanStateManagerConfiguration         CanSMConfiguration






/* -----------------------------------------------------------------------------
    &&&~ 
 ----------------------------------------------------------------------------- */

typedef VAR(uint16, CANSM_VAR_NOINIT) CanSM_BorTimerType;
typedef VAR(uint8, CANSM_VAR_NOINIT) CanSM_BorCounterType;
typedef P2CONST(CanSM_BorTimerType, TYPEDEF, CANSM_PBCFG) CanSM_BorTimerTypePtr;
typedef P2CONST(CanSM_BorCounterType, TYPEDEF, CANSM_PBCFG) CanSM_BorCounterTypePtr;
typedef P2CONST(boolean, TYPEDEF, CANSM_PBCFG) CanSM_PNEnableTypePtr;
typedef struct CanSM_ConfigTypeTag
{
  CanSM_BorTimerTypePtr CanSMBorTimeTxEnsuredPtr;
  CanSM_BorTimerTypePtr CanSMBorTimeL1Ptr;
  CanSM_BorTimerTypePtr CanSMBorTimeL2Ptr;
  CanSM_BorCounterTypePtr CanSMBorCounterL1ToL2Ptr;
  CanSM_BorCounterTypePtr CanSMBorCounterL2ErrPtr;
  uint32 CanSMGeneratorVersion;
} CanSM_ConfigType;


/* -----------------------------------------------------------------------------
    &&&~ 
 ----------------------------------------------------------------------------- */

#define CANSM_START_SEC_CONST_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

/* START of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */
extern CONST(uint8, CANSM_CONST) CanSMCountOfCanNetworks;
extern CONST(uint8, CANSM_CONST) CanSMNetworkHandle[1];
extern CONST(uint8, CANSM_CONST) CanSMControllerId[1];
extern CONST(uint8, CANSM_CONST) CanSMTransceiverId[1];
extern CONST(boolean, CANSM_CONST) CanSMNetworkTransceiverHandling[1];
extern CONST(boolean, CANSM_CONST) CanSMBusOffRxDM[1];
extern CONST(uint8, CANSM_CONST) CanSMNwSmMaxRepetitions;
/* END of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */

#define CANSM_STOP_SEC_CONST_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#if (CANSM_CRC_CHECK == STD_ON)
#define CANSM_START_SEC_CONST_32BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

/* START of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */
extern CONST(uint32, CANSM_CONST) CanSM_LinktimeCRC;
/* END of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */

#define CANSM_STOP_SEC_CONST_32BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"


#endif

#define CANSM_START_SEC_CONST_UNSPECIFIED
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

/* START of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */
extern CONST(Com_PduGroupIdType, CANSM_CONST) CanSMRxPduGroupId[1];
extern CONST(Com_PduGroupIdType, CANSM_CONST) CanSMTxPduGroupId[1];
/* END of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */

#define CANSM_STOP_SEC_CONST_UNSPECIFIED
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#define CANSM_START_SEC_VAR_ZERO_INIT_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern VAR(uint8, CANSM_VAR_ZERO_INIT) CanSM_EnableSetBusSleep[1];
#define CANSM_STOP_SEC_VAR_ZERO_INIT_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#define CANSM_START_SEC_PBCFG
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern CONST(uint16, CANSM_PBCFG) CanSMBorTimeTxEnsured[1];
extern CONST(uint16, CANSM_PBCFG) CanSMBorTimeL1[1];
extern CONST(uint16, CANSM_PBCFG) CanSMBorTimeL2[1];
extern CONST(uint8, CANSM_PBCFG) CanSMBorCounterL1ToL2[1];
extern CONST(uint8, CANSM_PBCFG) CanSMBorCounterL2Err[1];
#define CANSM_STOP_SEC_PBCFG
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"



/* -----------------------------------------------------------------------------
    &&&~ 
 ----------------------------------------------------------------------------- */

#define CANSM_START_SEC_CODE
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

/* START of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */
extern FUNC(void, CANSM_CODE) CanSm_SwitchIpduGroup(uint8 CanSm_CanNetworkIdx, uint8 RxTxStartStop);
/* END of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */

/* START of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */
extern FUNC(void, CANSM_CODE) CanSm_Dem_ReportErrorEvent(uint8 CanSm_CanNetworkIdx, uint8 CanSm_EventId, Dem_EventStatusType CanSm_EventStatus);
/* END of Checksum include for
  - Ccl_AsrSmCanLinktimeCRC */

#define CANSM_STOP_SEC_CODE
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"



#endif /* CANSM_CFG_H */
